builddir = .ninja

# build the cabal $target
rule cabal-build
  command = cabal build $target

# copy the main repository’s license file to the given directories
rule copy-license
  command = cp LICENSE $out

# extract the given $cabal-package’s metadate from project.json
rule generate-cabal-file-data
  command = $
    < $project-json $
      jq '.hackagePackages | .[] | select(.name == "$cabal-package")' $
      > $out

# use the metadata of a cabal package to generate a cabal file
rule generate-cabal-file
  command = $
    haskell-mustache $cabal-template $in > $out $
    && sed -i '1a -- !!! ATTN: file autogenerated from $cabal-template on toplevel !!!' $out $
    && touch $project-dir/CHANGELOG.md $
    && touch $project-dir/README.md

# use the project.json to generate cabal.project
rule generate-cabal.project
  command = $
    haskell-mustache $cabal-project-template $project-json > $out $
    && sed -i '1i -- !!! ATTN: file autogenerated from $cabal-project-template on toplevel !!!' $out

# use the project.json to generate hie.yaml
rule generate-hie.yaml
  command = $
    haskell-mustache $hie-yaml-template $project-json > $out $
    && sed -i '1i # !!! ATTN: file autogenerated from $hie-yaml-template on toplevel !!!' $out


# generate all files for each package

build pa-prelude/LICENSE : copy-license
build $builddir/pa-prelude.cabal.json : generate-cabal-file-data | project.json
  cabal-package = pa-prelude
  project-json = project.json
build pa-prelude/pa-prelude.cabal : generate-cabal-file $builddir/pa-prelude.cabal.json | pa-template.cabal.mustache
  cabal-template = pa-template.cabal.mustache
  project-dir = pa-prelude

build pa-label/LICENSE : copy-license
build $builddir/pa-label.cabal.json : generate-cabal-file-data | project.json
  cabal-package = pa-label
  project-json = project.json
build pa-label/pa-label.cabal : generate-cabal-file $builddir/pa-label.cabal.json | pa-template.cabal.mustache
  cabal-template = pa-template.cabal.mustache
  project-dir = pa-label

build pa-error-tree/LICENSE : copy-license
build $builddir/pa-error-tree.cabal.json : generate-cabal-file-data | project.json
  cabal-package = pa-error-tree
  project-json = project.json
build pa-error-tree/pa-error-tree.cabal : generate-cabal-file $builddir/pa-error-tree.cabal.json | pa-template.cabal.mustache
  cabal-template = pa-template.cabal.mustache
  project-dir = pa-error-tree


# generate cabal.project
build cabal.project : generate-cabal.project | cabal.project.mustache project.json
  cabal-project-template = cabal.project.mustache
  project-json = project.json

# generate hie.yaml
build hie.yaml : generate-hie.yaml | hie.yaml.mustache project.json
  hie-yaml-template = hie.yaml.mustache
  project-json = project.json

# build all packages
build build-all : cabal-build hie.yaml cabal.project pa-prelude/pa-prelude.cabal pa-label/pa-label.cabal pa-error-tree/pa-error-tree.cabal
  target = all
