builddir = .ninja

# build the cabal $target
rule cabal-build
  command = cabal build $target

# copy the main repository’s license file to the given directories
rule copy-license
  command = cp LICENSE $out

# extract the given $cabal-package’s metadate from project.json
rule generate-cabal-file-data
  command = $
    < project.json $
      jq '.hackagePackages | .[] | select(.name == "$cabal-package")' $
      > $out

# use the metadata of a cabal package to generate a cabal file
rule generate-cabal-file
  command = $
    haskell-mustache pa-template.cabal.mustache $in > $out; $
    sed -i '1a -- !!! ATTN: file autogenerated from pa-template.cabal.mustache on toplevel !!!' $out

# copy LICENSE to all subprocts (list manually)
build pa-label/LICENSE : copy-license
build pa-prelude/LICENSE : copy-license

# extract each package’s metadata
build $builddir/pa-prelude.cabal.json : generate-cabal-file-data
  cabal-package = pa-prelude
build $builddir/pa-label.cabal.json : generate-cabal-file-data
  cabal-package = pa-label

# generate each package’s cabal file
build pa-prelude/pa-prelude.cabal : generate-cabal-file $builddir/pa-prelude.cabal.json
build pa-label/pa-label.cabal : generate-cabal-file $builddir/pa-label.cabal.json

# build all packages
build build-all : cabal-build pa-prelude/pa-prelude.cabal pa-label/pa-label.cabal
  target = all

